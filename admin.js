
// =============================================
// –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–ò
// =============================================
const ADMIN_CONFIG = {
    password: "admin123",
    isLoggedIn: false
};

let projects = [];

// =============================================
// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–ò
// =============================================
document.addEventListener('DOMContentLoaded', function() {
    initializeAdminPanel();
});

function initializeAdminPanel() {
    console.log('üõ† Initializing admin panel...');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã
    loadProjects();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–º—É
    initTheme();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    initAdminEventListeners();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    checkAdminAuth();
    
    console.log('‚úÖ Admin panel initialized');
}

// =============================================
// –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–Ø
// =============================================
function checkAdminAuth() {
    const savedAuth = localStorage.getItem('portfolioAdminAuth');
    if (savedAuth) {
        ADMIN_CONFIG.isLoggedIn = true;
        showAdminSections();
    } else {
        showLoginSection();
    }
}

function showLoginSection() {
    document.getElementById('login').style.display = 'block';
    document.getElementById('projects').style.display = 'none';
    document.getElementById('settings').style.display = 'none';
}

function showAdminSections() {
    document.getElementById('login').style.display = 'none';
    document.getElementById('projects').style.display = 'block';
    document.getElementById('settings').style.display = 'block';
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã
    renderProjectsList();
    updateStatistics();
}

function loginAdmin(password) {
    if (password === ADMIN_CONFIG.password) {
        ADMIN_CONFIG.isLoggedIn = true;
        localStorage.setItem('portfolioAdminAuth', 'true');
        showAdminSections();
        showNotification('–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å!', 'success');
        return true;
    } else {
        showNotification('–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!', 'error');
        return false;
    }
}

function logoutAdmin() {
    ADMIN_CONFIG.isLoggedIn = false;
    localStorage.removeItem('portfolioAdminAuth');
    showLoginSection();
    showNotification('–í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã.', 'info');
}

// =============================================
// –£–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ï–ö–¢–ê–ú–ò
// =============================================
function loadProjects() {
    const saved = localStorage.getItem('portfolioProjects');
    projects = saved ? JSON.parse(saved) : getDefaultProjects();
    console.log(`üìÅ Loaded ${projects.length} projects in admin`);
}

function saveProjects() {
    localStorage.setItem('portfolioProjects', JSON.stringify(projects));
    updateStatistics();
}

function getDefaultProjects() {
    return [
        {
            "id": 1,
            "category": "web",
            "title": "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω Moscow RP",
            "description": "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ —Å –∫–æ—Ä–∑–∏–Ω–æ–π, —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –∏ —Å–∏—Å—Ç–µ–º–æ–π –æ–ø–ª–∞—Ç—ã –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ GTA 5 RP.",
            "image": "project1.png",
            "demoLink": "https://districkov.github.io/Moscow___RP/",
            "githubLink": "https://github.com/Districkov/Moscow___RP",
            "technologies": ["HTML5", "CSS3", "JavaScript", "Responsive Design"],
            "features": ["–ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫", "–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤", "–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω", "–ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫"]
        },
        {
            "id": 2,
            "category": "app", 
            "title": "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Pyrometer",
            "description": "–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏ –∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã.",
            "image": "project2.png",
            "demoLink": "https://pyrometer.tilda.ws/",
            "githubLink": "",
            "technologies": ["React", "Node.js", "WebSocket", "REST API"],
            "features": ["–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏", "–°–æ–≤–º–µ—Å—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞", "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞", "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"]
        },
        {
            "id": 3,
            "category": "design",
            "title": "–î–∏–∑–∞–π–Ω –ø—Ä–æ–µ–∫—Ç–∞ Astra GTA 5 RP", 
            "description": "–°–æ–∑–¥–∞–Ω–∏–µ UI/UX –¥–∏–∑–∞–π–Ω–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ GTA 5 RP —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º.",
            "image": "project3.png",
            "demoLink": "https://www.figma.com/design/XbDdfTxHWDtniMplxhkvcu/Astra-Project-%7C-Figma?node-id=310-3098&p=f&t=t1uig8AF5IQqlOv7-0",
            "githubLink": "",
            "technologies": ["Figma", "UI/UX Design", "Prototyping", "Design Systems"],
            "features": ["–î–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º–∞", "–ü—Ä–æ—Ç–æ—Ç–∏–ø—ã", "User Flow", "–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω"]
        }
    ];
}

function renderProjectsList() {
    const projectsList = document.getElementById('projectsList');
    if (!projectsList) return;

    if (projects.length === 0) {
        projectsList.innerHTML = `
            <div class="empty-state">
                <i class="fas fa-folder-open"></i>
                <h3>–ü–æ–∫–∞ –Ω–µ—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤</h3>
                <p>–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç —Å –ø–æ–º–æ—â—å—é —Ñ–æ—Ä–º—ã –≤—ã—à–µ</p>
            </div>
        `;
        return;
    }

    projectsList.innerHTML = projects.map(project => `
        <div class="project-item" data-id="${project.id}">
            <div class="project-header">
                <h4>${project.title}</h4>
                <span class="project-category badge ${project.category}">${getCategoryName(project.category)}</span>
            </div>
            <div class="project-content">
                <p>${project.description}</p>
                <div class="project-meta">
                    <span><i class="fas fa-image"></i> ${project.image}</span>
                    ${project.technologies && project.technologies.length > 0 ? 
                        `<span><i class="fas fa-code"></i> ${project.technologies.slice(0, 3).join(', ')}</span>` : ''
                    }
                </div>
            </div>
            <div class="project-actions">
                <button class="btn btn-small btn-outline" onclick="editProject(${project.id})">
                    <i class="fas fa-edit"></i> –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                </button>
                <button class="btn btn-small btn-danger" onclick="deleteProject(${project.id})">
                    <i class="fas fa-trash"></i> –£–¥–∞–ª–∏—Ç—å
                </button>
            </div>
        </div>
    `).join('');
}

function getCategoryName(category) {
    const names = {
        web: '–í–µ–±-—Å–∞–π—Ç',
        app: '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
        design: '–î–∏–∑–∞–π–Ω'
    };
    return names[category] || category;
}

function addProject(projectData) {
    const newProject = {
        id: Date.now(),
        title: projectData.title,
        category: projectData.category,
        description: projectData.description,
        image: projectData.image,
        demoLink: projectData.demoLink || '',
        githubLink: projectData.githubLink || '',
        technologies: projectData.technologies ? projectData.technologies.split(',').map(tech => tech.trim()) : [],
        features: []
    };

    projects.push(newProject);
    saveProjects();
    renderProjectsList();
    document.getElementById('projectForm').reset();
    showNotification('–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!', 'success');
}

function editProject(projectId) {
    const project = projects.find(p => p.id === projectId);
    if (!project) return;

    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞
    document.getElementById('projectTitle').value = project.title;
    document.getElementById('projectCategory').value = project.category;
    document.getElementById('projectDescription').value = project.description;
    document.getElementById('projectImage').value = project.image;
    document.getElementById('projectTechnologies').value = project.technologies.join(', ');
    document.getElementById('projectDemo').value = project.demoLink || '';
    document.getElementById('projectGithub').value = project.githubLink || '';

    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –ø—Ä–æ–µ–∫—Ç
    deleteProject(projectId, false);

    showNotification('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –∏ –Ω–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç" –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.', 'info');
}

function deleteProject(projectId, showNotification = true) {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç?')) return;

    projects = projects.filter(project => project.id !== projectId);
    saveProjects();
    renderProjectsList();
    
    if (showNotification) {
        showNotification('–ü—Ä–æ–µ–∫—Ç —É–¥–∞–ª–µ–Ω!', 'success');
    }
}

function updateStatistics() {
    document.getElementById('totalProjects').textContent = projects.length;
    document.getElementById('webProjects').textContent = projects.filter(p => p.category === 'web').length;
    document.getElementById('appProjects').textContent = projects.filter(p => p.category === 'app').length;
    document.getElementById('designProjects').textContent = projects.filter(p => p.category === 'design').length;
}

// =============================================
// –§–û–†–ú–´
// =============================================
function initAdminEventListeners() {
    // –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞
    const loginForm = document.getElementById('adminLoginForm');
    if (loginForm) {
        loginForm.addEventListener('submit', function(e) {
            e.preventDefault();
            const password = document.getElementById('adminPassword').value;
            loginAdmin(password);
            this.reset();
        });
    }

    // –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
    const projectForm = document.getElementById('projectForm');
    if (projectForm) {
        projectForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            if (!ADMIN_CONFIG.isLoggedIn) {
                showNotification('–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É!', 'error');
                return;
            }

            const formData = {
                title: document.getElementById('projectTitle').value.trim(),
                category: document.getElementById('projectCategory').value,
                description: document.getElementById('projectDescription').value.trim(),
                image: document.getElementById('projectImage').value.trim(),
                technologies: document.getElementById('projectTechnologies').value,
                demoLink: document.getElementById('projectDemo').value.trim(),
                githubLink: document.getElementById('projectGithub').value.trim()
            };

            // –í–∞–ª–∏–¥–∞—Ü–∏—è
            if (!formData.title || !formData.category || !formData.description || !formData.image) {
                showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!', 'error');
                return;
            }

            addProject(formData);
        });
    }

    // –§–æ—Ä–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    const settingsForm = document.getElementById('settingsForm');
    if (settingsForm) {
        settingsForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            const newPassword = document.getElementById('adminPasswordChange').value;
            const musicEnabled = document.getElementById('musicEnabled').checked;

            if (newPassword) {
                ADMIN_CONFIG.password = newPassword;
                showNotification('–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!', 'success');
            }

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º—É–∑—ã–∫–∏
            const musicSettings = {
                enabled: musicEnabled,
                volume: 0.3
            };
            localStorage.setItem('portfolioMusicSettings', JSON.stringify(musicSettings));

            showNotification('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!', 'success');
            this.reset();
        });
    }

    // –ù–∞–≤–∏–≥–∞—Ü–∏—è
    initAdminNavigation();
}

// =============================================
// –¢–ï–ú–ê
// =============================================
function initTheme() {
    const savedTheme = localStorage.getItem('portfolioTheme') || 'dark';
    setTheme(savedTheme);
    
    const themeToggle = document.getElementById('themeToggle');
    if (themeToggle) {
        themeToggle.addEventListener('click', toggleTheme);
        updateThemeIcon(savedTheme);
    }
}

function toggleTheme() {
    const newTheme = document.documentElement.getAttribute('data-theme') === 'dark' ? 'light' : 'dark';
    setTheme(newTheme);
}

function setTheme(theme) {
    document.documentElement.setAttribute('data-theme', theme);
    localStorage.setItem('portfolioTheme', theme);
    updateThemeIcon(theme);
}

function updateThemeIcon(theme) {
    const icon = document.querySelector('#themeToggle i');
    if (icon) {
        icon.className = theme === 'dark' ? 'fas fa-moon' : 'fas fa-sun';
    }
}

// =============================================
// –ù–ê–í–ò–ì–ê–¶–ò–Ø
// =============================================
function initAdminNavigation() {
    // –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
    const menuBtn = document.getElementById('mobileMenuBtn');
    const navbar = document.getElementById('navbar');
    
    if (menuBtn && navbar) {
        menuBtn.addEventListener('click', () => {
            navbar.classList.toggle('active');
            menuBtn.innerHTML = navbar.classList.contains('active') 
                ? '<i class="fas fa-times"></i>' 
                : '<i class="fas fa-bars"></i>';
        });
    }

    // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            const targetId = this.getAttribute('href');
            if (targetId === '#') return;
            
            const target = document.querySelector(targetId);
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        });
    });
}

// =============================================
// –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø
// =============================================
function showNotification(message, type = 'info') {
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    removeExistingNotifications();
    
    const notification = document.createElement('div');
    notification.className = `notification ${type} slide-in`;
    notification.innerHTML = `
        <div class="notification-content">
            <div class="notification-message">${message}</div>
            <button class="notification-close">
                <i class="fas fa-times"></i>
            </button>
        </div>
    `;
    
    document.body.appendChild(notification);
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É
    notification.querySelector('.notification-close').addEventListener('click', () => {
        notification.remove();
    });
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ
    setTimeout(() => {
        if (notification.parentElement) {
            notification.remove();
        }
    }, 5000);
}

function removeExistingNotifications() {
    const existing = document.querySelectorAll('.notification');
    existing.forEach(notification => notification.remove());
}

// =============================================
// –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –°–¢–ò–õ–ò –î–õ–Ø –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–ò
// =============================================
const adminStyles = `
    .admin-main {
        padding: 120px 0 50px;
        min-height: 100vh;
    }

    .admin-section {
        margin-bottom: 60px;
    }

    .admin-card {
        background: var(--dark-light);
        border-radius: var(--border-radius);
        padding: 30px;
        margin-bottom: 30px;
        border: 1px solid rgba(124, 252, 0, 0.1);
    }

    .admin-card h3 {
        color: var(--primary);
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .form-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 20px;
    }

    @media (max-width: 768px) {
        .form-row {
            grid-template-columns: 1fr;
        }
    }

    .admin-login-form {
        max-width: 400px;
        margin: 0 auto;
    }

    .projects-list {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    .project-item {
        background: var(--dark);
        border-radius: var(--border-radius);
        padding: 20px;
        border: 1px solid rgba(124, 252, 0, 0.1);
        transition: var(--transition);
    }

    .project-item:hover {
        border-color: var(--primary);
        transform: translateY(-2px);
    }

    .project-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
    }

    .project-header h4 {
        color: var(--light);
        margin: 0;
    }

    .badge {
        padding: 5px 12px;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
    }

    .badge.web {
        background: rgba(124, 252, 0, 0.2);
        color: var(--primary);
    }

    .badge.app {
        background: rgba(0, 191, 255, 0.2);
        color: #00bfff;
    }

    .badge.design {
        background: rgba(255, 105, 180, 0.2);
        color: #ff69b4;
    }

    .project-content p {
        color: var(--gray);
        margin-bottom: 15px;
    }

    .project-meta {
        display: flex;
        gap: 15px;
        flex-wrap: wrap;
        margin-bottom: 15px;
    }

    .project-meta span {
        color: var(--gray);
        font-size: 0.9rem;
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .project-actions {
        display: flex;
        gap: 10px;
    }

    .btn-small {
        padding: 8px 16px;
        font-size: 0.9rem;
    }

    .btn-danger {
        background: var(--error);
        color: white;
    }

    .btn-danger:hover {
        background: #ff3333;
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 20px;
        margin-top: 20px;
    }

    .stat-card {
        background: var(--dark);
        padding: 20px;
        border-radius: var(--border-radius);
        text-align: center;
        border: 1px solid rgba(124, 252, 0, 0.1);
    }

    .stat-number {
        font-size: 2.5rem;
        font-weight: 800;
        color: var(--primary);
        margin-bottom: 5px;
    }

    .stat-label {
        color: var(--gray);
        font-size: 0.9rem;
    }

    .empty-state {
        text-align: center;
        padding: 40px 20px;
        color: var(--gray);
    }

    .empty-state i {
        font-size: 3rem;
        margin-bottom: 15px;
        opacity: 0.5;
    }

    .empty-state h3 {
        margin-bottom: 10px;
        color: var(--light);
    }
`;

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –≤ –¥–æ–∫—É–º–µ–Ω—Ç
const styleSheet = document.createElement('style');
styleSheet.textContent = adminStyles;
document.head.appendChild(styleSheet);

console.log('üõ† Admin panel JavaScript loaded successfully!');
